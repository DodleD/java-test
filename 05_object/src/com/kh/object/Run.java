package com.kh.object;
/*
 * 객체지향 언어 : "객체"를 "지칭"하는 언어로 "객체중심"으로 돌아간다고 생각하면 된다.
 * 
 * 객체란 : 현실세계에 독립적으로 존재(목적이 있고 가치가 있고 의미가 있는 것) 하는 모든 것들을 의미
 * 현실세계에선 객체들간의 상호작용으로 돌아간다.
 * 
 * 객체지향 프로그래밍 : 현실세계의 객체들간의 상호작용
 * 				   프로그래밍을 통해서 가상세계로 구현하는 과정
 * 
 * 구현하고자 하는 프로그램상의 필요한 객체들을 만들기 위해서(생성하기 위해서)
 * 클래스라는 틀을 먼저 만들어야 한다.(클래스는 각 객체들의 속성(데이터)를 담아낼 그릇이다).
 * 
 * 내가 구현하고자하는 프로그램에서 필요한 객체들을 생각해볼 것.
 * 그 객체들이 가지는 공통적인 속성, 기능들을 주문할 것.
 * 추출한 것들을 가지고 내가 구현하고자 한 프로그램의 "실질적인 목적"에 맞춰 불필요한 속성, 기능을 제거할 것.
 * 그렇게 추려진 속성들을 어떤 자료형으로 어떤 변수명을 사용할 것인지 정의
 * 
 * 학생 관리 프로그램
 * 		1)학생관리객체,(a학생, b학생, c학생)
 * 		2)공통적인 속성 및 기능을 추출(나이, 전화번호, 키, 몸무게 등)
 * 		3)학생 "인적사항"을 관리하는 프로그램 : 이름,키, 성적 등등 인적사항
 * 		학생의 건강 : 이름, 학년, 반, 키, 몸무게, 달리기 속도, BMI지수
 * 
 * 		이름, 나이, 키는 공통
 * 
 * 		4)이름 : String name;
 * 		  나이 : int age;
 * 		  키 : double heigth;
 * 
 * 5. 위에 선정된 것들을 가지고 본격적인 프로그램을 시작하면
 * 		1. "변수"만으로 프로그래밍을 한다면?
 * 
 * 		"변수" = 하나의 자료형의 하나의 값만을 보관할 수 있음.
 * 		홍길동이라는 학생 개체 만들어내기 위해서 -> String name1 = "홍길동";, int age1 = 20;
 * 		등
 * 
 * 		문제점 -> 수백명에 해당하는 학생들을 만들 때 수천개의 변수가 필요.
 * 
 * 		2. "배열"로 프로그래밍을 한다면?
 * 
 * 		"배열" = 하나의 자료형의 여러개의 값들을 보관할 수 있음.
 * 
 * 		학생들의 이름을 보관하는 배열 String[] name = {"홍길동", ","김말똥"};
 * 		학생들의 나이를 보관하는 배열 int[] age = {20,30,};
 * 
 * 		기존의 학생정보를 지워야할 때 앞으로 땡기는 과정을 해야하는데 너무 귀찮다.
 * 
 * 		3.그래서 나온 개념이 구조체
 * 
 * 		여러개의 자료형에 여러개의 값들을 보관할 수 있다.
 * 		자바에서는 이러한 구조체 개념을 조금 더 확장해서 클래스라는 개념을 만들었다.
 * 
 */


public class Run {

	public static void main(String[] args) {
		//클래스를 이용해서 학생 객체 만들어보기
		
		//자바에서 객체로 만들기 위해서는 new 라는 키워드를 통해 메모리 공간을 할당해 줘야한다.
		
		Student choi  = new Student("김도헌", 17, 181, "남자");
		Student kim = new Student("만두",2,18,"여자");
		choi.
		kim.print();
		
		// .은 접근할 때 사용
		
	}

}
